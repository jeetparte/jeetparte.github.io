<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>picture language on sailing on lambdas ⛵️</title>
    <link>https://jeetparte.github.io/tags/picture-language/</link>
    <description>Recent content in picture language on sailing on lambdas ⛵️</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 03 Jun 2020 19:22:07 +0530</lastBuildDate>
    
	<atom:link href="https://jeetparte.github.io/tags/picture-language/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SICP: Fun with the Picture Language</title>
      <link>https://jeetparte.github.io/posts/sicp-picture-language/</link>
      <pubDate>Wed, 03 Jun 2020 19:22:07 +0530</pubDate>
      
      <guid>https://jeetparte.github.io/posts/sicp-picture-language/</guid>
      <description>So this week, I came across the picture language section in SICP and had some fun drawing with it.
In the book, the authors suppose the availability of the draw-line procedure and use it to implement segments-&amp;gt;painter. Before we can draw anything, we need to find a graphics library which provides the required drawing capabilities (or write one of our own).
With some searching, I found two options, both available inside Racket:</description>
    </item>
    
  </channel>
</rss>